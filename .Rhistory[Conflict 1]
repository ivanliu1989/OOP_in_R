},
hello = function()
{
"This method returns the string 'hello'."
"hello"
},
doubleY = function()
{
2 * y
},
printInput = function(input)
{
if(missing(input)) stop("You must provide some input.")
print(input)
}
)
)
obj1 <- MyClass$new()
obj1
obj1$hello()
obj1$doubleY()
obj2 <- MyClass$new(x = TRUE, z = "ZZZ")
obj2$printInput("I'm printing a line!")
obj2
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme, duration, startTime)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime(endTime, duration)
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function(endTime, duration)
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
obj1 <- Operation$new()
obj1
obj1$getStartTime()
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme, duration, startTime)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime(endTime, duration)
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function(endTime, duration)
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme, duration, startTime)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime(endTime, duration)
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function(endTime, duration)
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
obj1 <- Operation$new()
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, endTime = Sys.time() + 3600)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme, duration, startTime, endTime)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime(endTime, duration)
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function(endTime, duration)
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme, duration, startTime, endTime)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- startTime # getStartTime(endTime, duration)
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function(endTime, duration)
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
obj1 <- Operation$new()
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
letters
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme = NULL, duration = NULL, startTime = NULL, endTime = NULL)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- startTime # getStartTime(endTime, duration)
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function(endTime, duration)
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme = NULL, duration = 3600, startTime = Sys.time(), endTime = Sys.time())
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- startTime # getStartTime(endTime, duration)
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function(endTime, duration)
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme = NULL, duration = 3600, startTime = Sys.time(), endTime = Sys.time())
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime()
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function()
{
print("Get Start Time of the Operation")
endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
# initialize = function(opNme = NULL, duration = 3600, startTime = Sys.time(), endTime = Sys.time())
# {
#   "This method is called when you create an instance of the class."
#   opNme <<- opNme
#   duration <<- duration
#   endTime <<- endTime
#   startTime <<- getStartTime()
#   print(paste0(opNme, ": ", startTime, ", ", endTime))
# },
getStartTime = function()
{
print("Get Start Time of the Operation")
endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = c(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
# initialize = function(opNme = NULL, duration = 3600, startTime = Sys.time(), endTime = Sys.time())
# {
#   "This method is called when you create an instance of the class."
#   opNme <<- opNme
#   duration <<- duration
#   endTime <<- endTime
#   startTime <<- getStartTime()
#   print(paste0(opNme, ": ", startTime, ", ", endTime))
# },
getStartTime = function()
{
print("Get Start Time of the Operation")
endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
# startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
# initialize = function(opNme = NULL, duration = 3600, startTime = Sys.time(), endTime = Sys.time())
# {
#   "This method is called when you create an instance of the class."
#   opNme <<- opNme
#   duration <<- duration
#   endTime <<- endTime
#   startTime <<- getStartTime()
#   print(paste0(opNme, ": ", startTime, ", ", endTime))
# },
getStartTime = function()
{
print("Get Start Time of the Operation")
endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, endTime = Sys.time() + 3600)
ls()
rm(list = ls())
rm(list = ls()); ls()
rm(list = ls()); ls()
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme = NULL, duration = 3600, startTime = Sys.time(), endTime = Sys.time())
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime()
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function()
{
print("Get Start Time of the Operation")
endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps")
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time())
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme, duration, endTime)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime()
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function()
{
print("Get Start Time of the Operation")
endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, startTime = Sys.time(), endTime = Sys.time() + 3600)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, endTime = Sys.time() + 3600)
obj1$endTime = Sys.time() + 1800
obj1
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, endTime = Sys.time() + 3600)
obj1
obj1
obj1$endTime = Sys.time() + 1800
obj1
obj1$getStartTime()
obj1
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme, duration, endTime)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime()
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function()
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, endTime = Sys.time() + 3600)
obj1
obj1$endTime = Sys.time() + 1800
obj1
obj1$getStartTime()
obj1
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme, duration, endTime)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime()
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function()
{
print("Get Start Time of the Operation")
startTime <- endTime - duration
}
)
)
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600, endTime = Sys.time() + 3600)
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "POSIXct",
endTime = "POSIXct"
),
methods = list(
initialize = function(opNme, duration, endTime)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- endTime
startTime <<- getStartTime()
print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function()
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
install.packages(c("arules", "checkmate", "chron", "corrplot", "curl", "data.table", "debugme", "doParallel", "dplyr", "FactoRizationMachines", "geojson", "ggrepel", "irlba", "jqr", "openNLPdata", "purrr", "quantmod", "quantreg", "randomForestSRC", "Rcpp", "RcppArmadillo", "rgdal", "rJava", "ROI", "ROI.plugin.glpk", "rugarch", "RWeka", "RWekajars", "satellite", "tfruns", "tidyr", "tidyselect"))
install.packages(c("arules", "checkmate", "chron", "corrplot", "curl", "data.table", "debugme", "doParallel", "dplyr", "FactoRizationMachines", "geojson", "ggrepel", "irlba", "jqr", "openNLPdata", "purrr", "quantmod", "quantreg", "randomForestSRC", "Rcpp", "RcppArmadillo", "rgdal", "rJava", "ROI", "ROI.plugin.glpk", "rugarch", "RWeka", "RWekajars", "satellite", "tfruns", "tidyr", "tidyselect"))
install.packages("data.table")
# If you don't want to specify what variable type a field should have, pass "ANY" as the value in the list of fields.
# Any constructor logic needs to be in an optional function called initialize.
# If the first line of a method is a string, it is interpreted as documentation for that method.
# Inside a method, if you want to assign to a field, use global assignment (<<-).
# http://adv-r.had.co.nz/OO-essentials.html#rc
# http://adv-r.had.co.nz/R5.html
rm(list = ls()); ls()
# Operation ---------------------------------------------------------------
Operation <- setRefClass(
"Operation",
fields = list(
opNme = "character",
duration = "numeric",
startTime = "ANY",
endTime = "ANY"
),
methods = list(
initialize = function(opNme, duration)
{
"This method is called when you create an instance of the class."
opNme <<- opNme
duration <<- duration
endTime <<- NA
startTime <<- NA
# print(paste0(opNme, ": ", startTime, ", ", endTime))
},
getStartTime = function()
{
print("Get Start Time of the Operation")
startTime <<- endTime - duration
}
)
)
# Test
obj1 <- Operation$new(opNme = "testOps", duration = 1.5 * 3600)
obj1
obj1
obj1$endTime = Sys.time() + 1800
obj1
obj1$getStartTime()
obj1
obj1$getStartTime()
